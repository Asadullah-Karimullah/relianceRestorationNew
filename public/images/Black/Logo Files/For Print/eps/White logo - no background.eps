%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2392 845
%%HiResBoundingBox: 0 0 2391.1199 844.07996
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2391.1199 844.07996 re
W
q
[0.24 0 0 -0.24 0 844.07996] cm
q
0 0 9962.5 3515.625 re
W*
q
[1033.56152 0 0 1033.39941 -825.2981 -826.20276] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
1.364 2.557 m
1.858 2.377 l
1.858 3.918 l
1.867 3.918 l
2.21 3.918 l
2.21 1.329 l
2.934 1.763 l
2.934 3.918 l
3.039 3.918 l
3.087 3.918 l
3.146 3.918 l
3.146 3.164 l
3.673 3.541 l
3.673 3.918 l
3.917 3.918 l
3.917 3.232 l
3.666 3.07 l
3.666 2.294 l
3.146 1.976 l
3.146 1.655 l
2.221 1.089 l
2.221 1.083 l
2.215 1.086 l
2.21 1.083 l
2.21 1.088 l
1.712 1.29 l
1.712 2.121 l
1.082 2.377 l
1.082 3.918 l
1.364 3.918 l
1.364 2.557 l
1.364 2.557 l
h
3.146 2.229 m
3.502 2.444 l
3.502 2.963 l
3.146 2.73 l
3.146 2.229 l
h
f
Q
q
[50.910629 0 0 50.902641 3750.135 799.49426] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
11.62 19.48 m
11.22 19.959999 10.76 20.119999 10.24 20.119999 c
9.32 20.119999 8.799999 19.259998 8.799999 18.16 c
8.86 16.119999 9.239999 13.76 6.359999 13.76 c
4.699999 13.76 l
3.899999 18.639999 l
3.759999 19.42 3.839999 19.5 4.479999 19.5 c
4.259999 19.92 3.759999 20.139999 3.359999 20.139999 c
3.119999 20.139999 2.899999 20.099998 2.739999 20.019999 c
2.539999 20.099998 2.319999 20.139999 2.079999 20.139999 c
1.679999 20.139999 1.239999 19.92 1.159999 19.5 c
1.799999 19.5 1.899999 19.42 2.019999 18.639999 c
3.579999 8.539999 l
3.719999 7.759999 3.639999 7.679999 2.999999 7.679999 c
3.219999 7.259999 3.719999 7.039999 4.119999 7.039999 c
4.359999 7.039999 4.619999 7.119999 4.779999 7.259999 c
5.139999 7.039999 4.939999 7.039999 7.379999 7.039999 c
10.739999 7.019999 12.359999 7.979999 12.359999 9.819999 c
12.359999 11.799999 10.919998 13.059999 8.999998 13.439999 c
10.519999 13.839998 10.919998 15.099999 10.759998 17.799999 c
10.679998 19.019999 10.779999 19.48 11.619998 19.48 c
11.62 19.48 l
h
4.78 13.16 m
6.18 13.16 l
8.26 13.16 9.92 11.78 9.92 9.86 c
9.940001 8.599999 9.14 7.639999 7.22 7.639999 c
6.14 7.639999 5.54 8.179999 5.38 9.24 c
4.78 13.16 l
h
18.396 20.139999 m
17.996 20.139999 17.556 19.92 17.476 19.5 c
18.115999 19.5 18.216 19.42 18.336 18.639999 c
19.896 8.539999 l
20.035999 7.759999 19.955999 7.679999 19.316 7.679999 c
19.535999 7.259999 20.035999 7.039999 20.436001 7.039999 c
20.676001 7.039999 20.936001 7.119999 21.096001 7.259999 c
21.456001 7.039999 22.176001 7.039999 24.616001 7.039999 c
25.736002 7.039999 l
27.016003 7.039999 28.136002 8.039999 27.696003 9.439999 c
27.316004 10.499998 26.196003 10.859999 25.516003 10.119999 c
26.476002 8.179998 25.216003 7.639999 23.816002 7.639999 c
22.356003 7.639999 21.916002 7.779999 21.696003 9.219999 c
21.156002 12.759999 l
22.256002 11.779999 24.236002 11.919999 24.236002 13.139999 c
24.236002 13.959999 23.296001 14.4 22.796001 14.039999 c
22.956001 13.039999 21.896002 12.779999 21.016001 13.619999 c
20.336 17.959999 l
20.116001 19.4 20.496 19.539999 21.956001 19.539999 c
23.896002 19.539999 25.336002 18.999998 24.996002 17.059999 c
25.896002 16.32 26.916002 16.68 26.956001 17.74 c
26.956001 19.139999 25.516001 20.139999 24.236002 20.139999 c
22.576002 20.139999 l
20.136002 20.139999 19.416002 20.139999 19.116001 19.92 c
18.916 20.059999 18.636002 20.139999 18.396002 20.139999 c
18.396 20.139999 l
h
34.532001 19.92 m
34.332001 20.059999 34.052002 20.139999 33.812 20.139999 c
33.411999 20.139999 32.972 19.92 32.892002 19.5 c
33.532001 19.5 33.632004 19.42 33.752003 18.639999 c
35.372002 8.24 l
35.512001 7.46 35.432003 7.38 34.792 7.38 c
35.012001 6.96 35.512001 6.74 35.911999 6.74 c
36.152 6.74 36.371998 6.78 36.531998 6.86 c
36.731998 6.78 36.951996 6.74 37.191998 6.74 c
37.591999 6.74 38.031998 6.96 38.111996 7.38 c
37.471996 7.38 37.371994 7.46 37.251995 8.24 c
35.751995 17.959999 l
35.511993 19.4 35.911995 19.539999 37.371994 19.539999 c
39.311993 19.539999 40.751995 18.999998 40.411995 17.059999 c
41.311996 16.32 42.331993 16.68 42.371994 17.74 c
42.371994 19.139999 40.931995 20.139999 39.651993 20.139999 c
37.991993 20.139999 l
35.551994 20.139999 34.831993 20.139999 34.531994 19.92 c
34.532001 19.92 l
h
51.667999 8.24 m
50.048 18.639999 l
49.908001 19.42 49.987999 19.5 50.628002 19.5 c
50.408001 19.92 49.908001 20.139999 49.508003 20.139999 c
49.268002 20.139999 49.048004 20.099998 48.888004 20.019999 c
48.688004 20.099998 48.468006 20.139999 48.228004 20.139999 c
47.828003 20.139999 47.388004 19.92 47.308006 19.5 c
47.948006 19.5 48.048008 19.42 48.168007 18.639999 c
49.788006 8.24 l
49.928005 7.46 49.848007 7.38 49.208004 7.38 c
49.428005 6.96 49.928005 6.74 50.328003 6.74 c
50.568005 6.74 50.788002 6.78 50.948002 6.86 c
51.148003 6.78 51.368 6.74 51.608002 6.74 c
52.008003 6.74 52.448002 6.96 52.528 7.38 c
51.888 7.38 51.787998 7.46 51.667999 8.24 c
h
58.284 20.120001 m
57.804001 20.120001 57.403999 19.660002 57.403999 19.060001 c
57.403999 18.540001 57.703999 17.960001 58.063999 17.360001 c
63.843998 7.040001 l
64.143997 7.040001 l
66.463997 18.580002 l
66.643997 19.400002 66.703995 19.480001 67.363998 19.480001 c
66.963997 19.960001 66.503998 20.120001 65.984001 20.120001 c
64.984001 20.120001 64.683998 19.200001 64.564003 18.620001 c
64.004005 15.800001 l
59.684006 15.800001 l
58.644005 17.660002 l
58.364006 18.180002 58.164005 19.040001 58.844006 19.040001 c
59.264004 19.42 58.884007 20.120001 58.284004 20.120001 c
58.284 20.120001 l
h
60.004002 15.2 m
63.864002 15.2 l
62.844002 10.1 l
60.004002 15.2 l
h
73.279999 18.139999 m
75.059998 7.119999 l
75.519997 7.119999 l
81.519997 16.84 l
82.719994 9.06 l
82.919991 7.74 83.679993 7.12 84.699997 7.12 c
85.119995 7.12 85.559998 7.34 85.559998 7.82 c
85.559998 8.24 85.220001 8.64 84.860001 8.58 c
84.520004 7.9 83.699997 8.24 83.559998 9.1 c
81.82 20.120001 l
81.339996 20.120001 l
75.399994 10.540001 l
74.119995 18.18 l
73.919998 19.5 73.159996 20.120001 72.139992 20.120001 c
71.719994 20.120001 71.279991 19.900002 71.279991 19.42 c
71.279991 19 71.619987 18.6 71.979988 18.66 c
72.319984 19.34 73.139992 19 73.279991 18.139999 c
73.279999 18.139999 l
h
94.816002 19.48 m
97.116005 19.48 97.676003 18.34 96.956001 17.879999 c
97.396004 17.019999 98.496002 17.059999 98.496002 17.939999 c
98.496002 19.299999 96.656006 20.179998 94.776001 20.179998 c
91.716003 20.179998 89.475998 17.839998 89.475998 14.619999 c
89.475998 10.799999 92.956001 6.739999 96.855995 6.739999 c
99.355995 6.739999 100.875992 7.859999 100.875992 9.339998 c
100.875992 10.299998 100.335991 11.219998 99.315994 11.219998 c
98.835991 11.219998 98.255997 10.819999 98.195992 10.219998 c
98.855995 9.859999 99.075989 9.499998 99.075989 8.939999 c
99.075989 8.299998 98.395988 7.439999 96.855988 7.439999 c
93.535988 7.439999 92.215988 11.699999 92.215988 15.839998 c
92.195992 18.519999 93.11599 19.479998 94.815987 19.479998 c
94.816002 19.48 l
h
106.872002 20.139999 m
106.472 20.139999 106.032005 19.92 105.952003 19.5 c
106.592003 19.5 106.692001 19.42 106.812004 18.639999 c
108.372002 8.539999 l
108.512001 7.759999 108.431999 7.679999 107.792 7.679999 c
108.012001 7.259999 108.512001 7.039999 108.912003 7.039999 c
109.152 7.039999 109.412003 7.119999 109.572006 7.259999 c
109.932007 7.039999 110.652008 7.039999 113.092003 7.039999 c
114.212006 7.039999 l
115.492004 7.039999 116.612007 8.039999 116.172005 9.439999 c
115.792007 10.499998 114.672005 10.859999 113.992004 10.119999 c
114.952003 8.179998 113.692001 7.639999 112.292007 7.639999 c
110.832008 7.639999 110.392006 7.779999 110.172005 9.219999 c
109.632004 12.759999 l
110.732002 11.779999 112.712006 11.919999 112.712006 13.139999 c
112.712006 13.959999 111.772003 14.4 111.272003 14.039999 c
111.432007 13.039999 110.372002 12.779999 109.492004 13.619999 c
108.812004 17.959999 l
108.592003 19.4 108.972008 19.539999 110.432007 19.539999 c
112.372009 19.539999 113.812004 18.999998 113.472008 17.059999 c
114.372009 16.32 115.392006 16.68 115.432007 17.74 c
115.432007 19.139999 113.992004 20.139999 112.712006 20.139999 c
111.052002 20.139999 l
108.612 20.139999 107.891998 20.139999 107.592003 19.92 c
107.392006 20.059999 107.112 20.139999 106.872002 20.139999 c
h
f
Q
q
[20.969893 0 0 20.966604 3784.8662 1970.5759] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
11.62 19.48 m
11.22 19.959999 10.76 20.119999 10.24 20.119999 c
9.32 20.119999 8.799999 19.259998 8.799999 18.16 c
8.86 16.119999 9.239999 13.76 6.359999 13.76 c
4.699999 13.76 l
3.899999 18.639999 l
3.759999 19.42 3.839999 19.5 4.479999 19.5 c
4.259999 19.92 3.759999 20.139999 3.359999 20.139999 c
3.119999 20.139999 2.899999 20.099998 2.739999 20.019999 c
2.539999 20.099998 2.319999 20.139999 2.079999 20.139999 c
1.679999 20.139999 1.239999 19.92 1.159999 19.5 c
1.799999 19.5 1.899999 19.42 2.019999 18.639999 c
3.579999 8.539999 l
3.719999 7.759999 3.639999 7.679999 2.999999 7.679999 c
3.219999 7.259999 3.719999 7.039999 4.119999 7.039999 c
4.359999 7.039999 4.619999 7.119999 4.779999 7.259999 c
5.139999 7.039999 4.939999 7.039999 7.379999 7.039999 c
10.739999 7.019999 12.359999 7.979999 12.359999 9.819999 c
12.359999 11.799999 10.919998 13.059999 8.999998 13.439999 c
10.519999 13.839998 10.919998 15.099999 10.759998 17.799999 c
10.679998 19.019999 10.779999 19.48 11.619998 19.48 c
11.62 19.48 l
h
4.78 13.16 m
6.18 13.16 l
8.26 13.16 9.92 11.78 9.92 9.86 c
9.940001 8.599999 9.14 7.639999 7.22 7.639999 c
6.14 7.639999 5.54 8.179999 5.38 9.24 c
4.78 13.16 l
h
18.396 20.139999 m
17.996 20.139999 17.556 19.92 17.476 19.5 c
18.115999 19.5 18.216 19.42 18.336 18.639999 c
19.896 8.539999 l
20.035999 7.759999 19.955999 7.679999 19.316 7.679999 c
19.535999 7.259999 20.035999 7.039999 20.436001 7.039999 c
20.676001 7.039999 20.936001 7.119999 21.096001 7.259999 c
21.456001 7.039999 22.176001 7.039999 24.616001 7.039999 c
25.736002 7.039999 l
27.016003 7.039999 28.136002 8.039999 27.696003 9.439999 c
27.316004 10.499998 26.196003 10.859999 25.516003 10.119999 c
26.476002 8.179998 25.216003 7.639999 23.816002 7.639999 c
22.356003 7.639999 21.916002 7.779999 21.696003 9.219999 c
21.156002 12.759999 l
22.256002 11.779999 24.236002 11.919999 24.236002 13.139999 c
24.236002 13.959999 23.296001 14.4 22.796001 14.039999 c
22.956001 13.039999 21.896002 12.779999 21.016001 13.619999 c
20.336 17.959999 l
20.116001 19.4 20.496 19.539999 21.956001 19.539999 c
23.896002 19.539999 25.336002 18.999998 24.996002 17.059999 c
25.896002 16.32 26.916002 16.68 26.956001 17.74 c
26.956001 19.139999 25.516001 20.139999 24.236002 20.139999 c
22.576002 20.139999 l
20.136002 20.139999 19.416002 20.139999 19.116001 19.92 c
18.916 20.059999 18.636002 20.139999 18.396002 20.139999 c
18.396 20.139999 l
h
36.372002 20.379999 m
33.472 20.379999 31.732002 19.119999 31.732002 17.559999 c
31.732002 15.4 34.252003 14.56 34.792004 16.4 c
33.192005 18 34.192005 19.779999 36.372002 19.779999 c
39.552002 19.779999 41.712002 15.419998 38.252003 14.439999 c
35.832001 13.699999 l
33.992001 13.159999 33.212002 12.419999 33.192001 11.199999 c
33.192001 8.759998 35.572002 6.619999 38.292 6.619999 c
40.391998 6.619999 41.672001 7.419999 41.692001 8.699999 c
41.692001 10.379999 39.612 11.219999 39.372002 9.639999 c
40.972 8.539999 39.912003 7.219999 38.272003 7.219999 c
35.632004 7.219999 33.292004 10.32 36.152004 11.179999 c
39.712006 12.259999 l
41.252007 12.759999 42.032005 13.679999 42.032005 14.999999 c
42.032005 17.84 39.372005 20.379999 36.372005 20.379999 c
36.372002 20.379999 l
h
49.348 20.139999 m
48.947998 20.139999 48.507999 19.92 48.428001 19.5 c
49.068001 19.5 49.168003 19.42 49.288002 18.639999 c
50.808002 8.98 l
50.948002 8.06 50.828003 7.599999 50.208004 7.56 c
48.888004 7.44 47.628006 8.419999 48.208004 9.719999 c
47.428005 10.66 45.968002 9.959999 45.948006 8.94 c
45.948006 7.66 47.408005 6.98 48.728004 6.96 c
50.628006 6.96 51.688004 7.099999 52.008003 7.38 c
52.408005 7.099999 53.568005 6.96 55.408005 6.96 c
56.748005 6.98 57.648006 7.579999 57.668003 8.48 c
57.668003 9.86 55.688004 10.799999 55.088005 9.7 c
56.088005 8.38 55.208004 7.48 53.888004 7.56 c
53.188004 7.599999 52.828003 8.08 52.688004 8.98 c
51.168003 18.639999 l
51.048004 19.42 51.108002 19.5 51.748005 19.5 c
51.528004 19.92 51.028004 20.139999 50.628006 20.139999 c
50.388004 20.139999 50.168007 20.099998 50.008007 20.019999 c
49.808006 20.099998 49.588009 20.139999 49.348007 20.139999 c
49.348 20.139999 l
h
66.903999 20.200001 m
63.823997 20.200001 61.563999 17.800001 61.584 14.540001 c
61.584 10.540001 65.064003 6.720001 68.984001 6.720001 c
72.084 6.720001 74.363998 9.160001 74.324005 12.460001 c
74.324005 16.34 70.864006 20.200001 66.904007 20.200001 c
66.903999 20.200001 l
h
66.924004 19.48 m
70.304001 19.48 71.584 15.199999 71.584 11.02 c
71.584 8.42 70.844002 7.44 68.963997 7.44 c
65.643997 7.44 64.323997 11.7 64.323997 15.839999 c
64.304001 18.519999 65.023994 19.48 66.923996 19.48 c
66.924004 19.48 l
h
89.860001 19.48 m
89.459999 19.959999 89 20.119999 88.480003 20.119999 c
87.560005 20.119999 87.040001 19.259998 87.040001 18.16 c
87.099998 16.119999 87.480003 13.76 84.599998 13.76 c
82.939995 13.76 l
82.139992 18.639999 l
81.999992 19.42 82.079994 19.5 82.719994 19.5 c
82.499992 19.92 81.999992 20.139999 81.599991 20.139999 c
81.359993 20.139999 81.139992 20.099998 80.979988 20.019999 c
80.779991 20.099998 80.55999 20.139999 80.319984 20.139999 c
79.919983 20.139999 79.479988 19.92 79.399986 19.5 c
80.039986 19.5 80.139984 19.42 80.259987 18.639999 c
81.819984 8.539999 l
81.959984 7.759999 81.879982 7.679999 81.239983 7.679999 c
81.459984 7.259999 81.959984 7.039999 82.359985 7.039999 c
82.599983 7.039999 82.859985 7.119999 83.019989 7.259999 c
83.37999 7.039999 83.179993 7.039999 85.619987 7.039999 c
88.979988 7.019999 90.599991 7.979999 90.599991 9.819999 c
90.599991 11.799999 89.159988 13.059999 87.23999 13.439999 c
88.759987 13.839998 89.159988 15.099999 88.999992 17.799999 c
88.919991 19.019999 89.019989 19.48 89.859993 19.48 c
89.860001 19.48 l
h
83.019997 13.16 m
84.419998 13.16 l
86.5 13.16 88.159996 11.78 88.159996 9.86 c
88.179993 8.599999 87.379997 7.639999 85.459999 7.639999 c
84.379997 7.639999 83.779999 8.179999 83.620003 9.24 c
83.019997 13.16 l
h
95.435997 20.120001 m
94.955994 20.120001 94.556 19.660002 94.556 19.060001 c
94.556 18.540001 94.856003 17.960001 95.216003 17.360001 c
100.996002 7.040001 l
101.296005 7.040001 l
103.616005 18.580002 l
103.796005 19.400002 103.856003 19.480001 104.516006 19.480001 c
104.116005 19.960001 103.656006 20.120001 103.136009 20.120001 c
102.136009 20.120001 101.836006 19.200001 101.716011 18.620001 c
101.156013 15.800001 l
96.836014 15.800001 l
95.796013 17.660002 l
95.516014 18.180002 95.31601 19.040001 95.99601 19.040001 c
96.416008 19.42 96.036011 20.120001 95.436012 20.120001 c
95.435997 20.120001 l
h
97.155998 15.2 m
101.015999 15.2 l
99.996002 10.1 l
97.155998 15.2 l
h
111.832001 20.139999 m
111.431999 20.139999 110.992004 19.92 110.912003 19.5 c
111.552002 19.5 111.652 19.42 111.772003 18.639999 c
113.292 8.98 l
113.431999 8.06 113.311996 7.599999 112.692001 7.56 c
111.372002 7.44 110.112 8.419999 110.692001 9.719999 c
109.912003 10.66 108.452003 9.959999 108.431999 8.94 c
108.431999 7.66 109.891998 6.98 111.211998 6.96 c
113.112 6.96 114.171997 7.099999 114.491997 7.38 c
114.891998 7.099999 116.051994 6.96 117.891998 6.96 c
119.231995 6.98 120.131996 7.579999 120.152 8.48 c
120.152 9.86 118.171997 10.799999 117.571999 9.7 c
118.571999 8.38 117.692001 7.48 116.372002 7.56 c
115.672005 7.599999 115.312004 8.08 115.172005 8.98 c
113.652008 18.639999 l
113.532005 19.42 113.59201 19.5 114.23201 19.5 c
114.012009 19.92 113.512009 20.139999 113.112007 20.139999 c
112.872009 20.139999 112.652008 20.099998 112.492004 20.019999 c
112.292007 20.099998 112.072006 20.139999 111.832001 20.139999 c
h
129.447998 8.24 m
127.827995 18.639999 l
127.687996 19.42 127.767998 19.5 128.40799 19.5 c
128.187988 19.92 127.687988 20.139999 127.287987 20.139999 c
127.047989 20.139999 126.827988 20.099998 126.667984 20.019999 c
126.467987 20.099998 126.247986 20.139999 126.00798 20.139999 c
125.607979 20.139999 125.167984 19.92 125.087982 19.5 c
125.727982 19.5 125.82798 19.42 125.947983 18.639999 c
127.567986 8.24 l
127.707985 7.46 127.627983 7.38 126.987984 7.38 c
127.207985 6.96 127.707985 6.74 128.107986 6.74 c
128.347992 6.74 128.567993 6.78 128.727982 6.86 c
128.927979 6.78 129.14798 6.74 129.387985 6.74 c
129.787979 6.74 130.227982 6.96 130.307983 7.38 c
129.667984 7.38 129.567978 7.46 129.447983 8.24 c
129.447998 8.24 l
h
140.503998 20.200001 m
137.423996 20.200001 135.164001 17.800001 135.18399 14.540001 c
135.18399 10.540001 138.663986 6.720001 142.583984 6.720001 c
145.68399 6.720001 147.963989 9.160001 147.923981 12.460001 c
147.923981 16.34 144.463974 20.200001 140.503983 20.200001 c
140.503998 20.200001 l
h
140.524002 19.48 m
143.904007 19.48 145.184006 15.199999 145.184006 11.02 c
145.184006 8.42 144.444 7.44 142.564011 7.44 c
139.244003 7.44 137.924011 11.7 137.924011 15.839999 c
137.904007 18.519999 138.624008 19.48 140.524017 19.48 c
140.524002 19.48 l
h
153.839996 18.139999 m
155.619995 7.119999 l
156.080002 7.119999 l
162.080002 16.84 l
163.279999 9.06 l
163.479996 7.74 164.240005 7.12 165.259995 7.12 c
165.679993 7.12 166.119995 7.34 166.119995 7.82 c
166.119995 8.24 165.779999 8.64 165.419998 8.58 c
165.080002 7.9 164.259995 8.24 164.119995 9.1 c
162.37999 20.120001 l
161.899994 20.120001 l
155.959991 10.540001 l
154.679993 18.18 l
154.479996 19.5 153.719986 20.120001 152.699997 20.120001 c
152.279999 20.120001 151.839996 19.900002 151.839996 19.42 c
151.839996 19 152.179993 18.6 152.539993 18.66 c
152.87999 19.34 153.699997 19 153.839996 18.139999 c
h
183.332 8.24 m
181.71201 18.639999 l
181.57201 19.42 181.65201 19.5 182.29201 19.5 c
182.07201 19.92 181.57201 20.139999 181.17201 20.139999 c
180.93201 20.139999 180.71201 20.099998 180.55202 20.019999 c
180.35202 20.099998 180.13202 20.139999 179.89201 20.139999 c
179.49202 20.139999 179.05202 19.92 178.97202 19.5 c
179.61201 19.5 179.71202 19.42 179.83202 18.639999 c
181.45201 8.24 l
181.59201 7.46 181.51201 7.38 180.87201 7.38 c
181.09201 6.96 181.59201 6.74 181.992 6.74 c
182.23201 6.74 182.45201 6.78 182.612 6.86 c
182.812 6.78 183.032 6.74 183.272 6.74 c
183.672 6.74 184.112 6.96 184.192 7.38 c
183.552 7.38 183.452 7.46 183.332 8.24 c
h
191.06799 18.139999 m
192.84799 7.119999 l
193.308 7.119999 l
199.308 16.84 l
200.508 9.06 l
200.70799 7.74 201.468 7.12 202.48799 7.12 c
202.90799 7.12 203.34799 7.34 203.34799 7.82 c
203.34799 8.24 203.008 8.64 202.64799 8.58 c
202.308 7.9 201.48799 8.24 201.34799 9.1 c
199.60799 20.120001 l
199.12799 20.120001 l
193.18799 10.540001 l
191.90799 18.18 l
191.70799 19.5 190.94798 20.120001 189.92799 20.120001 c
189.508 20.120001 189.06799 19.900002 189.06799 19.42 c
189.06799 19 189.40799 18.6 189.76799 18.66 c
190.10799 19.34 190.92799 19 191.06799 18.139999 c
h
212.604 19.48 m
214.90401 19.48 215.464 18.34 214.744 17.879999 c
215.18401 17.019999 216.284 17.059999 216.284 17.939999 c
216.284 19.299999 214.444 20.179998 212.564 20.179998 c
209.504 20.179998 207.26399 17.839998 207.26399 14.619999 c
207.26399 10.799999 210.74399 6.739999 214.644 6.739999 c
217.144 6.739999 218.664 7.859999 218.664 9.339998 c
218.664 10.299998 218.12401 11.219998 217.104 11.219998 c
216.62401 11.219998 216.04401 10.819999 215.98401 10.219998 c
216.64401 9.859999 216.86401 9.499998 216.86401 8.939999 c
216.86401 8.299998 216.18402 7.439999 214.64401 7.439999 c
211.32401 7.439999 210.00401 11.699999 210.00401 15.839998 c
209.98401 18.519999 210.90401 19.479998 212.60402 19.479998 c
212.604 19.48 l
h
223.52 20.34 m
222.92 20.34 222.52 19.860001 222.60001 19.280001 c
222.68001 18.720001 223.24001 18.240002 223.82001 18.240002 c
224.38 18.240002 224.8 18.720001 224.72 19.320002 c
224.64 19.920002 224.12 20.340002 223.52 20.340002 c
223.52 20.34 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
